// ========================================================================
// exact solution
// ========================================================================
double DNS_profile_395(double zz)
{
  int i;
  double value, val;

  double z[129] =
  {
    0.0000e-00,  7.5298e-05,  3.0118e-04,  6.7762e-04,  1.2045e-03,  1.8819e-03,  2.7095e-03,  3.6874e-03,  4.8153e-03,  6.0930e-03,  7.5205e-03,  9.0974e-03,  1.0823e-02,
    1.2699e-02,  1.4722e-02,  1.6895e-02,  1.9215e-02,  2.1683e-02,  2.4298e-02,  2.7060e-02,  2.9969e-02,  3.3024e-02,  3.6224e-02,  3.9569e-02,  4.3060e-02,  4.6694e-02,
    5.0472e-02,  5.4393e-02,  5.8456e-02,  6.2661e-02,  6.7007e-02,  7.1494e-02,  7.6120e-02,  8.0886e-02,  8.5790e-02,  9.0832e-02,  9.6011e-02,  1.0133e-01,  1.0678e-01,
    1.1236e-01,  1.1808e-01,  1.2393e-01,  1.2991e-01,  1.3603e-01,  1.4227e-01,  1.4864e-01,  1.5515e-01,  1.6178e-01,  1.6853e-01,  1.7541e-01,  1.8242e-01,  1.8954e-01,
    1.9679e-01,  2.0416e-01,  2.1165e-01,  2.1926e-01,  2.2699e-01,  2.3483e-01,  2.4279e-01,  2.5086e-01,  2.5905e-01,  2.6735e-01,  2.7575e-01,  2.8427e-01,  2.9289e-01,
    3.0162e-01,  3.1046e-01,  3.1940e-01,  3.2844e-01,  3.3758e-01,  3.4683e-01,  3.5617e-01,  3.6561e-01,  3.7514e-01,  3.8477e-01,  3.9449e-01,  4.0430e-01,  4.1420e-01,
    4.2419e-01,  4.3427e-01,  4.4443e-01,  4.5467e-01,  4.6500e-01,  4.7541e-01,  4.8590e-01,  4.9646e-01,  5.0710e-01,  5.1782e-01,  5.2860e-01,  5.3946e-01,  5.5039e-01,
    5.6138e-01,  5.7244e-01,  5.8357e-01,  5.9476e-01,  6.0601e-01,  6.1732e-01,  6.2868e-01,  6.4010e-01,  6.5158e-01,  6.6311e-01,  6.7469e-01,  6.8632e-01,  6.9799e-01,
    7.0972e-01,  7.2148e-01,  7.3329e-01,  7.4513e-01,  7.5702e-01,  7.6894e-01,  7.8090e-01,  7.9289e-01,  8.0491e-01,  8.1696e-01,  8.2904e-01,  8.4114e-01,  8.5327e-01,
    8.6542e-01,  8.7759e-01,  8.8978e-01,  9.0198e-01,  9.1420e-01,  9.2644e-01,  9.3868e-01,  9.5093e-01,  9.6319e-01,  9.7546e-01,  9.8773e-01,  1.0000e-00
  };

  double  Umean[129] =
  {
    0.0000e+00,   2.9538e-02,  1.1811e-01,   2.6562e-01,   4.7198e-01,   7.3701e-01,   1.0605e+00,  1.4417e+00,  1.8799e+00,  2.3729e+00,  2.9177e+00,  3.5093e+00,
    4.1409e+00,  4.8032e+00,  5.4854e+00,  6.1754e+00,  6.8611e+00,  7.5309e+00,  8.1754e+00,  8.7870e+00,  9.3607e+00,  9.8937e+00,  1.0385e+01,  1.0836e+01,
    1.1248e+01,  1.1624e+01,  1.1966e+01,  1.2278e+01,  1.2563e+01,  1.2822e+01,  1.3060e+01,  1.3278e+01,  1.3479e+01,  1.3664e+01,  1.3837e+01,  1.3998e+01,
    1.4148e+01,  1.4290e+01,  1.4425e+01,  1.4552e+01,  1.4673e+01,  1.4790e+01,  1.4902e+01,  1.5011e+01,  1.5117e+01,  1.5221e+01,  1.5322e+01,  1.5421e+01,
    1.5518e+01,  1.5614e+01,  1.5707e+01,  1.5799e+01,  1.5890e+01,  1.5979e+01,  1.6067e+01,  1.6153e+01,  1.6239e+01,  1.6324e+01,  1.6409e+01,  1.6493e+01,
    1.6576e+01,  1.6659e+01,  1.6741e+01,  1.6823e+01,  1.6903e+01,  1.6984e+01,  1.7063e+01,  1.7141e+01,  1.7218e+01,  1.7294e+01,  1.7369e+01,  1.7443e+01,
    1.7517e+01,  1.7590e+01,  1.7664e+01,  1.7738e+01,  1.7812e+01,  1.7886e+01,  1.7960e+01,  1.8034e+01,  1.8108e+01,  1.8182e+01,  1.8254e+01,  1.8326e+01,
    1.8396e+01,  1.8466e+01,  1.8535e+01,  1.8603e+01,  1.8669e+01,  1.8734e+01,  1.8797e+01,  1.8859e+01,  1.8919e+01,  1.8978e+01,  1.9035e+01,  1.9092e+01,
    1.9148e+01,  1.9202e+01,  1.9256e+01,  1.9308e+01,  1.9359e+01,  1.9408e+01,  1.9456e+01,  1.9503e+01,  1.9548e+01,  1.9593e+01,  1.9636e+01,  1.9678e+01,
    1.9719e+01,  1.9758e+01,  1.9796e+01,  1.9832e+01,  1.9865e+01,  1.9897e+01,  1.9927e+01,  1.9955e+01,  1.9981e+01,  2.0004e+01,  2.0026e+01,  2.0046e+01,
    2.0064e+01,  2.0080e+01,  2.0094e+01,  2.0106e+01,  2.0116e+01,  2.0123e+01,  2.0129e+01,  2.0132e+01,  2.0133e+01
  };

  if (zz<=1)
  {
    val = zz;
  }
  else
  {
    val = 2-zz;
  }

  for(i=0;i<128;i++)
  {
    if(val>=z[i] && val<=z[i+1])
    {
      value = val*(Umean[i+1]-Umean[i])/(z[i+1]-z[i]) + (Umean[i]*z[i+1]-Umean[i+1]*z[i])/(z[i+1]-z[i]);
    }
  }

  return(value);
}
